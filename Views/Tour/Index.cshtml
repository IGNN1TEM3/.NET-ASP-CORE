@model ListModel<Tour>
@{
    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();
    int prev = Model.CurrentPage == 1? 1: Model.CurrentPage -1;
    int next = Model.CurrentPage == Model.TotalPages? Model.CurrentPage: Model.CurrentPage +1;
    string? category = request.Query["categoryNormalizedName"].ToString();
}

@section main {
    <div class="dropdown mt-3">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
            @if (!string.IsNullOrEmpty(category))
            {
                @ViewBag.CurrentCategoryName
            }
            else
            {
                <text>Выберите категорию</text>
            }
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            @foreach (var categoryItem in ViewBag.Categories)
            {
                <li>
                    <a class="dropdown-item" asp-action="Index" asp-controller="Tour" asp-route-categoryNormalizedName="@categoryItem.NormalizedName" asp-route-page="1">
                        @categoryItem.Name
                    </a>
                </li>
            }
        </ul>
    </div>

    <div class="row mt-3">
        @foreach (var item in Model.Items)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <img src="@item.ImagePath" class="card-img-top" alt="@item.Name" />
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">@item.Description</p>
                        <form asp-action="Add" asp-controller="Cart" method="post">
                            <input type="hidden" name="id" value="@item.Id" />
                            <input type="hidden" name="returnUrl" value="@returnUrl" />
                            <button type="submit" class="btn btn-primary">Добавить в корзину</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

<div class="pagination">
    <ul class="pagination">
        <!-- Previous button -->
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { categoryNormalizedName = category, pageNo = Model.CurrentPage - 1 })" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>

        <!-- Page numbers -->
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { categoryNormalizedName = category, pageNo = i })">@i</a>
            </li>
        }

        <!-- Next button -->
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { categoryNormalizedName = category, pageNo = Model.CurrentPage + 1 })" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</div>

}
